<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
      crossorigin="anonymous"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"
    />
    
    <title>Document</title>
    <style>
      body{
        background-image: url("https://previews.123rf.com/images/natashapankina/natashapankina1604/natashapankina160400050/54971921-seamless-background-hand-drawn-doodle-books-and-reading-set-vector-illustration-sketchy-book-icons-e.jpg");
      }
      #title,#author,#isbn{
        border-radius: 14px;
        border: 2px solid silver;
      }
    </style>
  </head>
  <body>
   
    <div class="container mt-4 col-6">
      <!-- HEADING -->
      <h1 class="display-4 text-center">
          <i class="fa fa-book "></i> My<span class="text-primary">Book</span>List
      </h1>

      <!-- FORM -->
      <form id="book-form">
          <div class="form-group">
              <label for="title">Title</label>
              <input type="text" id="title" class="form-control" />
              
          </div>

          <div class="form-group">
              <label for="author">Author</label>
              <input type="text" id="author" class="form-control" />
          </div>

          <div class="form-group">
              <label for="isbn">Published year</label>
              <input type="text" id="isbn" class="form-control" />
          </div>

          <input type="submit" value="Submit" class="btn btn-info btn-block col-12 mt-4" />
      </form>

      <table class="table table-striped mt-5">
          <thead>
              <tr id="idol">
                  <th>Title</th>
                  <th>Author</th>
                  <th>Published year</th>
                  <th>Action</th>
                  
                  
              </tr>
          </thead>

          <tbody id="book-list">

          </tbody>
      </table>
  </div>
  
  
    <script>
     
class Book {
  constructor(title,author,isbn){
      this.title = title;
      this.author = author;
      this.isbn = isbn;
  }
}


class UI {

  
  static displayBooks(){
      let books = Store.getBooks();

      books.forEach((book) => UI.addBookToList(book));

      
  }

  
  static addBookToList(book){
      const list = document.querySelector('#book-list');

      const row = document.createElement('tr');

      row.innerHTML = `
          <td>${book.title}</td>
          <td>${book.author}</td>
          <td>${book.isbn}</td>
          <td><a href="#" class="btn btn-danger btn-sm delete">X</a></td>
      `;

      list.appendChild(row);
  }

  
  static clearFields(){
      document.querySelector('#title').value = '';
      document.querySelector('#author').value = '';
      document.querySelector('#isbn').value = '';
  }

  
  static deleteBook(el){
      if(el.classList.contains('delete')){
          el.parentElement.parentElement.remove();
      }
  }

  
  static showAlerts(message,className){
      
      const div = document.createElement('div');
      div.className = `alert alert-${className}`;
      
      div.appendChild(document.createTextNode(message));
      
      const container = document.querySelector('.container');
      const form = document.querySelector('#book-form');
      container.insertBefore(div,form);

      
      setTimeout(() => document.querySelector('.alert').remove(), 3000);
  }
}


class Store {
  static getBooks() {
      let books;
      if(localStorage.getItem('books') === null) {
        books = [];
      } else {
        books = JSON.parse(localStorage.getItem('books'));
      }
  
      return books;
    }

  static saveBook(book){
      let books;
      books = Store.getBooks();
      books.push(book);
      localStorage.setItem('books',JSON.stringify(books));
  }

  static removeBook(isbn){
      const books = Store.getBooks();

      books.forEach((book, index) => {
        if(book.isbn === isbn) {
          books.splice(index, 1);
        }
      });
  
      localStorage.setItem('books', JSON.stringify(books));
  }
}


document.addEventListener('DOMContentLoaded',UI.displayBooks);


document.querySelector('#book-form').addEventListener('submit',(e) => {
  
  
  e.preventDefault();

  
  const title = document.querySelector('#title').value;
  const author = document.querySelector('#author').value;
  const isbn = document.querySelector('#isbn').value;

  if(title === '' || author === '' || isbn === ''){
      UI.showAlerts('Please fill in all details...','danger');
  } else {
      
      const book = new Book(title,author,isbn);

      
      UI.addBookToList(book);

      
      Store.saveBook(book);

      
      UI.showAlerts('Book Added','success');

      
      UI.clearFields();
  }

});


document.querySelector('#book-list').addEventListener('click',(e) => {
  UI.deleteBook(e.target);

  Store.removeBook(e.target.parentElement.previousElementSibling.textContent);

  UI.showAlerts('Book Removed','danger');
});

    </script>
  </body>
</html>
